{
	"info": {
		"_postman_id": "4a2bb093-c6de-4a45-a74e-10dd15fcc4c8",
		"name": "HW_imgur_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Загрузка изображений",
			"item": [
				{
					"name": "больше 10 мб",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "размер 10 мб",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "размер 500 кб",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "размер 1.4 кб",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "расширение jpeg",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "расширение bmp размер больше 50 мб",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "расширение png",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "расширение gif",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "расширение webp",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "вместо изображения видео файл",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "вместо изображения word файл",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "загрузка base64",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "загрузка url",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "разрешение 7680*4320",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "разрешение 2560*1440",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				},
				{
					"name": "разрешение 600*400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"clientId\", \"546c25a59c58ad7\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var imageHash = res.data.id;",
									"var imageDeleteHash = res.data.deletehash;",
									"tests['Returns 7 char alphanumeric id'] = /^[a-z0-9]{7}$/i.test(imageHash);",
									"tests['Returns 15 char alhpanumeric deletehash'] = /^[a-z0-9]{15}$/i.test(imageDeleteHash);",
									"",
									"postman.setEnvironmentVariable('imageHash', imageHash);",
									"postman.setEnvironmentVariable('imageDeleteHash', imageDeleteHash);",
									"",
									"postman.setNextRequest('Account Images'); // Account -> Account Images"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "5eeae49394cd929e299785c8805bd168fc675280",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "A binary file, base64 data, or a URL for an image. (up to 10MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "video",
									"description": "A binary file (up to 200MB)",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "album",
									"value": "{{albumHash}}",
									"description": "The id of the album you want to add the image to. For anonymous albums, album should be the deletehash that is returned at creation",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "url",
									"description": "The type of the file that's being sent; file, base64 or URL",
									"type": "text",
									"disabled": true
								},
								{
									"key": "name",
									"value": "pixel.gif",
									"description": "The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "1x1 Pixel",
									"description": "The title of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "This is an 1x1 pixel image.",
									"description": "The description of the image",
									"type": "text",
									"disabled": true
								},
								{
									"key": "disable_audio",
									"value": "1",
									"description": "Will remove the audio track from a video file",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload"
							]
						},
						"description": "Upload a new image or video.\n\n#### Accepted Video Formats\n| MIME Type        | \n|------------------|\n| video/mp4        |\n| video/webm       |\n| video/x-matroska |\n| video/quicktime  |\n| video/x-flv      |\n| video/x-msvideo  |\n| video/x-ms-wmv   |\n| video/mpeg       |"
					},
					"response": [
						{
							"name": "Sample Anonymous Upload",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Client-ID {{clientId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7",
											"type": "text"
										},
										{
											"key": "album",
											"value": "{{albumHash}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "title",
											"value": "1x1 Pixel",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "This is an 1x1 pixel image.",
											"type": "text",
											"disabled": true
										},
										{
											"key": "name",
											"value": "pixel.gif",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "gif",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://api.imgur.com/3/image",
									"protocol": "https",
									"host": [
										"api",
										"imgur",
										"com"
									],
									"path": [
										"3",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Authorization, Content-Type, Accept, X-Mashape-Authorization, IMGURPLATFORM, IMGURUIDJAFO, SESSIONCOUNT, IMGURMWBETA, IMGURMWBETAOPTIN",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, PUT, POST, DELETE, OPTIONS",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-RateLimit-ClientLimit, X-RateLimit-ClientRemaining, X-RateLimit-UserLimit, X-RateLimit-UserRemaining, X-RateLimit-UserReset",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "close",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Tue, 23 May 2017 16:28:10 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f8e9f040e2b6ba2ebf5c836309b5cb50cf4b7368\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT",
									"name": "Expires",
									"description": ""
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Limit",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Limit",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Remaining",
									"value": "1250",
									"name": "X-Post-Rate-Limit-Remaining",
									"description": ""
								},
								{
									"key": "X-Post-Rate-Limit-Reset",
									"value": "-2",
									"name": "X-Post-Rate-Limit-Reset",
									"description": ""
								},
								{
									"key": "X-origin-ip",
									"value": "172.16.2.228",
									"name": "X-origin-ip",
									"description": ""
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "259f1853850b21cb4df8bc5bd15b7884",
									"key": "IMGURSESSION"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": true,
									"domain": "imgur.com",
									"path": "/",
									"secure": false,
									"value": "1",
									"key": "_nc"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "api.imgur.com",
									"path": "/",
									"secure": false,
									"value": "upload.i-054973f4f04ffec62.production",
									"key": "UPSERVERID"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"orunSTu\",\n    \"title\": null,\n    \"description\": null,\n    \"datetime\": 1495556889,\n    \"type\": \"image/gif\",\n    \"animated\": false,\n    \"width\": 1,\n    \"height\": 1,\n    \"size\": 42,\n    \"views\": 0,\n    \"bandwidth\": 0,\n    \"vote\": null,\n    \"favorite\": false,\n    \"nsfw\": null,\n    \"section\": null,\n    \"account_url\": null,\n    \"account_id\": 0,\n    \"is_ad\": false,\n    \"in_most_viral\": false,\n    \"tags\": [],\n    \"ad_type\": 0,\n    \"ad_url\": \"\",\n    \"in_gallery\": false,\n    \"deletehash\": \"x70po4w7BVvSUzZ\",\n    \"name\": \"\",\n    \"link\": \"http://i.imgur.com/orunSTu.gif\"\n  },\n  \"success\": true,\n  \"status\": 200\n}"
						}
					]
				}
			]
		},
		{
			"name": "удаление изображений",
			"item": [
				{
					"name": "Image Deletion (Un-Authed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var res = JSON.parse(responseBody);",
									"",
									"tests[\"Successful delete\"] = res.success === true;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://api.imgur.com/3/image/{{imageDeleteHash}}",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"image",
								"{{imageDeleteHash}}"
							]
						},
						"description": "Deletes an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)"
					},
					"response": []
				},
				{
					"name": "Image Deletion (Authed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200'] = (responseCode.code === 200);",
									"tests['Image deletion was successful'] = res.success === true && res.data === true;",
									"",
									"postman.setNextRequest('end'); // stop running tests by setting next request to an invalid name / id"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://api.imgur.com/3/image/{{imageHash}}",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"image",
								"{{imageHash}}"
							]
						},
						"description": "Deletes an image.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Работа с альбомом",
			"item": [
				{
					"name": "создание альбома",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// This endpoint is critical to the test flow, ",
									"// so this stops the request cycle if any of these tests error.",
									"postman.setNextRequest('end');",
									"",
									"var res = JSON.parse(responseBody);",
									"",
									"var albumHash = res.data.id;",
									"var albumDeleteHash = res.data.deletehash;",
									"",
									"tests['Returns 7 char alphanumeric album id'] = /^[a-z0-9]{5}$/i.test(albumHash);",
									"tests['Returns 15 char alhpanumeric album deletehash'] = /^[a-z0-9]{15}$/i.test(albumDeleteHash);",
									"",
									"postman.setEnvironmentVariable('albumHash', albumHash);",
									"postman.setEnvironmentVariable('galleryHash', albumHash);",
									"postman.setEnvironmentVariable('albumDeleteHash', albumDeleteHash);",
									"",
									"tests['Status code is 200'] = (responseCode.code === 200);",
									"",
									"postman.setNextRequest('Share with Community (Album)'); // Gallery -> Share with Community (Album)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}",
								"description": "Use this header if performing this action anonymously.",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "Use this header if performing this action as a logged-in user."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ids[]",
									"value": "{{imageHash}}",
									"description": "The image ids that you want to be included in the album.",
									"type": "text"
								},
								{
									"key": "ids[]",
									"value": "{{imageHash2}}",
									"description": "any additional image ids...",
									"type": "text",
									"disabled": true
								},
								{
									"key": "deletehashes[]",
									"value": "{{deleteHash}}",
									"description": "The deletehashes of the images that you want to be included in the album.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "deletehashes[]",
									"value": "{{deleteHash2}}",
									"description": "any additional deletehashes...",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "My dank meme album",
									"description": "The title of the album",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This albums contains a lot of dank memes. Be prepared.",
									"description": "The description of the album",
									"type": "text"
								},
								{
									"key": "privacy",
									"value": "public",
									"description": "Sets the privacy level of the album. Values are : public | hidden | secret. Defaults to user's privacy settings for logged in users.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "cover",
									"value": "{{imageHash}}",
									"description": "The ID of an image that you want to be the cover of the album",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/album",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"album"
							]
						},
						"description": "Create a new album. Optional parameter of `ids[]` is an array of image ids to add to the album. If uploading anonymous images to an anonymous album please use the optional parameter of `deletehashes[]` rather than `ids[]`. Note: including the optional `deletehashes[]` parameter will also work for authenticated user albums. There is no need to duplicate image ids with their corresponding deletehash.\n\nThis method is available without authenticating an account, and may be used merely by sending \"Authorization: Client-ID {client_id}\" in the request headers. Doing so will create an anonymous album which is not tied to an account.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                                                                                                          |\n|----------------|----------|--------------------------------------------------------------------------------------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be included in the album.                                                                             |\n| deletehashes[] | optional | The deletehashes of the images that you want to be included in the album.                                                            |\n| title          | optional | The title of the album                                                                                                               |\n| description    | optional | The description of the album                                                                                                         |\n| privacy        | optional | Sets the privacy level of the album. Values are : `public` &#124; `hidden` &#124; secret. Defaults to user's privacy settings for logged in users. |\n| layout         | optional | (_deprecated_) Sets the layout to display the album. Values are : `blog` &#124; `grid` &#124; `horizontal` &#124; `vertical`                                               |\n| cover          | optional | The ID of an image that you want to be the cover of the album                                                                        |"
					},
					"response": []
				},
				{
					"name": "Получение данных о картинке в альбоме",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID {{clientId}}"
							}
						],
						"url": {
							"raw": "https://api.imgur.com/3/album/{{albumHash}}/image/{{imageHash}}",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"album",
								"{{albumHash}}",
								"image",
								"{{imageHash}}"
							]
						},
						"description": "Get information about an image in an album, any additional actions found in [Image Endpoint](https://api.imgur.com/endpoints/image/) will also work.\n\n#### Response Model: [Image](https://api.imgur.com/models/image)"
					},
					"response": []
				},
				{
					"name": "Add Images to an Album (Authed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ids[]",
									"value": "{{imageHash}}",
									"type": "text"
								},
								{
									"key": "ids[]",
									"value": "{{imageHash2}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/album/{{albumHash}}/add",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"album",
								"{{albumHash}}",
								"add"
							]
						},
						"description": "Adds the images to an album. You must specify ids[] or deletehashes[] in order to add an image to an album.\n\n#### Response Model: [Basic](https://api.imgur.com/models/basic)\n\n#### Parameters\n\n| Key            | Required | Description                                             |\n|----------------|----------|---------------------------------------------------------|\n| ids[]          | optional | The image ids that you want to be added to the album.   |\n| deletehashes[] | optional | The image deletehashes that you want to be added to the album. |"
					},
					"response": []
				}
			]
		}
	]
}